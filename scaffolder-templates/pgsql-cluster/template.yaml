---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: postgresql-cluster
  title: Postgresql Cluster template
  description: scaffolder v1beta3 template to create pgsql cluster on existing git repository
  tags:
    - database
    - postgresql
  links:
    - title: Documentation
      url: https://backstage.io/docs/features/software-templates
      icon: docs
    - title: Source
      url: https://github.com/Vikaspogu/software-templates/blob/main/scaffolder-templates/pgsql-cluster/template.yaml
      icon: github
spec:
  owner: group:ops
  type: service
  parameters:
    - title: Postgresql Definition
      required:
        - namespace
      properties:
        environment:
          title: Select environment
          type: string
          default: dev
          enum:
            - prod
            - stage
            - dev
          enumNames:
            - 'production (prod)'
            - 'staging (stage)'
            - 'development (dev)'
        cluster:
          title: Select openshift cluster
          type: string
          default: pxm-acm
          enum:
            - pxm-acm
            - dev
            - prod
          enumNames:
            - 'acm (pxm-acm)'
            - 'development (dev)'
            - 'production (prod)'
        namespace:
          title: Namespace
          type: string
          description: Namespace of the postgresql cluster
        create_namespace:
          title: Create a namespace
          type: boolean
        instances:
          title: Instances
          type: integer
          description: Number of instances required in the cluster
          default: 1
        storage_size:
          title: Storage Size
          type: string
          description: Size of the storage (ex. 1Gi)
          default: 1Gi
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    - title: Provide information about the GitHub location
      required:
        - repoOwner
        - repoName
        - owner
      properties:
        repoOwner:
          title: Repository Owner
          type: string
          default: vikaspogu
        owner:
          title: Owner
          type: string
          description: Owner of the component
        repoName:
          title: Repository Name
          type: string
          default: cluster-components
            
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          cluster: ${{parameters.cluster}}
          environment: ${{parameters.environment}}
          name: ${{parameters.namespace}}-${{parameters.environment}}-db
          namespace: ${{parameters.namespace}}-${{parameters.environment}}
          instances: ${{parameters.instances}}
          storage_size: ${{parameters.storage_size}}
          create_namespace: ${{parameters.create_namespace}}
          repoOwner: ${{ parameters.repoOwner }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          applicationType: resources

    - id: publish
      name: Create a pull request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=${{ parameters.repoOwner }}&repo=${{ parameters.repoName }}
        branchName: pqsql/${{parameters.namespace}}-${{parameters.environment}}
        title: "Create a new pgsql database in ${{parameters.namespace}}"
        description: |
          ### Requesting new pgsql database in ${{parameters.namespace}}

          This pull request is generated by IDP catalog

    - id: label_pr
      name: Add labels to PR
      action: github:issues:label
      input:
        repoUrl: github.com?owner=${{ parameters.repoOwner }}&repo=${{ parameters.repoName }}
        number: '${{ steps.publish.output.pullRequestNumber }}'
        labels:
          - postgresql
          - created-by-backstage
          - ${{ parameters.environment }}
          - ${{parameters.namespace}}

  output:
    links:
      - title: 'Pull request link'
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github